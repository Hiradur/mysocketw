cmake_minimum_required( VERSION 3.0.2 )

# some versioning things
SET(LIB_MAJOR_VERSION "3")
SET(LIB_MINOR_VERSION "10")
SET(LIB_BUILD_VERSION "26" CACHE STRING "build version")
SET(LIB_VERSION "${LIB_MAJOR_VERSION}.${LIB_MINOR_VERSION}.${LIB_BUILD_VERSION}")
IF(NOT DEFINED LIB_INSTALL_DIR)
  SET(LIB_INSTALL_DIR "lib${LIB_SUFFIX}")
ENDIF(NOT DEFINED LIB_INSTALL_DIR)

project( SocketW )

set( SOURCES
  src/sw_base.cxx
  src/sw_inet.cxx
  src/sw_ssl.cxx
  src/sw_unix.cxx
)

add_library( SocketW ${SOURCES} )

install( TARGETS SocketW DESTINATION lib )
install(DIRECTORY src/ DESTINATION include FILES_MATCHING PATTERN "*.h")

# CPack
set(CPACK_PACKAGE_DESCRIPTION "SocketW")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "SocketW is a library which provides cross-platform socket abstraction.")
set(CPACK_PACKAGE_NAME "socketw")
set(CPACK_PACKAGE_CONTACT "Edgar@AnotherFoxGuy.com")
set(CPACK_PACKAGE_VENDOR "Edgar@AnotherFoxGuy.com")
SET(CPACK_PACKAGE_VERSION ${LIB_VERSION})
SET(CPACK_PACKAGE_VERSION_MAJOR ${LIB_MAJOR_VERSION})
SET(CPACK_PACKAGE_VERSION_MINOR ${LIB_MINOR_VERSION})
SET(CPACK_PACKAGE_VERSION_PATCH ${LIB_BUILD_VERSION})
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README")

SET(CPACK_GENERATOR ZIP)
IF(UNIX)
  SET(CPACK_GENERATOR ${CPACK_GENERATOR};STGZ;TGZ;DEB;RPM)
ENDIF(UNIX)
IF(LINUX)
  SET(CPACK_GENERATOR ${CPACK_GENERATOR};DEB;RPM)
ENDIF(LINUX)
IF(MSVC)
  SET(CPACK_GENERATOR ${CPACK_GENERATOR};NSIS)
ENDIF(MSVC)
IF(APPLE)
  SET(CPACK_GENERATOR ${CPACK_GENERATOR};PackageMaker)
ENDIF(APPLE)
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${LIB_VERSION}-${CMAKE_SYSTEM_PROCESSOR}")
include(CPack)

# other doc files
set(DOC_FILES README LICENSE docs/base.html docs/errors.html docs/index.html docs/inet.html docs/intro.html docs/links.html docs/ssl.html docs/unix.html)
install(FILES ${DOC_FILES} DESTINATION doc/socketw/)
